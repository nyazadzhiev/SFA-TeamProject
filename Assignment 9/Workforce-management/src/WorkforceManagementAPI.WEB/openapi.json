openapi: 3.0.1
info:
  title: WorkforceManagementAPI.WEB
  version: v1
paths:
  /api/Team:
    get:
      tags:
        - Team
      summary: List all teams, existing in the database.
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
          
    post:
      tags:
        - Team
      summary: Create a team.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/TeamRequestDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TeamRequestDTO'
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
          
  /api/Team/{id}:
    get:
      tags:
        - Team
      summary: Find a team by its Id.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
    put:
      tags:
        - Team
      summary: Edit a team.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/TeamRequestDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TeamRequestDTO'
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
    delete:
      tags:
        - Team
      summary: REMOVE a team.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/Team/My:
    get:
      tags:
        - Team
      summary: List all teams, the logged user is member of.
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/Team/{teamId}/Assign/{userId}:
    post:
      tags:
        - Team
      summary: Assign user to a team.
      parameters:
        - name: teamId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/Team/{teamId}/Unassign/{userId}:
    delete:
      tags:
        - Team
      summary: REMOVE user from a team.
      parameters:
        - name: teamId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/Team/{teamId}/AssignLeader/{userId}:
    put:
      tags:
        - Team
      summary: Assign user as a TEAM LEADER.
      parameters:
        - name: teamId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/TimeOff:
    get:
      tags:
        - TimeOff
      summary: List all the existing timeOff requests in the database.
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
    post:
      tags:
        - TimeOff
      summary: Create a timeOff request.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequestDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TimeOffRequestDTO'
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/TimeOff/MyRequests:
    get:
      tags:
        - TimeOff
      summary: List all timeOff requests, for the logged user.
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/TimeOff/{timeOffId}:
    get:
      tags:
        - TimeOff
      summary: Find a timeOff request by its Id.
      parameters:
        - name: timeOffId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
    put:
      tags:
        - TimeOff
      summary: Edit a timeoff request.
      parameters:
        - name: timeOffId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequestDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TimeOffRequestDTO'
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
    delete:
      tags:
        - TimeOff
      summary: REMOVE a timeoff request.
      parameters:
        - name: timeOffId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/TimeOff/SubmitFeedback/{timeOffId}:
    post:
      tags:
        - TimeOff
      summary: APPROVE or REJECT a timeoff request.
      parameters:
        - name: timeOffId
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVoteRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateVoteRequestDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateVoteRequestDTO'
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/Users:
    post:
      tags:
        - Users
      summary: Create a user.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestDTO'
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/Users/All:
    get:
      tags:
        - Users
      summary: List all users, existing in the database.
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/Users/{id}:
    get:
      tags:
        - Users
      summary: Find a user by Id.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
    put:
      tags:
        - Users
      summary: Edit a user.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserReauestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/EditUserReauestDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditUserReauestDTO'
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
    delete:
      tags:
        - Users
      summary: REMOVE a user.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
  /api/Users/SetAdministrator/{id}:
    post:
      tags:
        - Users
      summary: Set user as ADMINISTRATOR.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
      responses:
        '200':
          description: OK - Request succeeded.
        '201':
          description: Created - Request resulted in new resource created.
        '401':
          description: Unauthorized - Please check the provided credentials.
        '403':
          description: Forbidden - Your credentials don't meet the required authorization level to access the resource. Please, contact your administrator to get desired permissions.
        '404':
          description: NotFound - Requested information does not exist in the server.
        '409':
          description: Conflict - The submitted entity ran into a conflict with an existing one.
        '400' :
          description: BadRequest - Request could not be understood by the server.
        '500' :
          description: InternalServerError - Generic error occured in the server.
components:
  schemas:
    TeamResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        creatorId:
          type: string
          nullable: true
        modifierId:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date
        modifiedAt:
          type: string
          format: date
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        teamLeaderId:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    TeamRequestDTO:
      required:
        - description
        - title
      type: object
      properties:
        title:
          maxLength: 50
          type: string
        description:
          maxLength: 200
          type: string
      additionalProperties: false
    RequestType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    Status:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    TimeOffResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        reason:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/RequestType'
        status:
          $ref: '#/components/schemas/Status'
        creatorName:
          type: string
          nullable: true
        modifierName:
          type: string
          nullable: true
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
      additionalProperties: false
    TimeOffRequestDTO:
      required:
        - endDate
        - reason
        - startDate
        - type
      type: object
      properties:
        reason:
          type: string
        type:
          $ref: '#/components/schemas/RequestType'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
      additionalProperties: false
    CreateVoteRequestDTO:
      required:
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      additionalProperties: false
    CreateUserRequestDTO:
      required:
        - email
        - firstName
        - lastName
        - password
        - repeatPassword
      type: object
      properties:
        email:
          maxLength: 50
          minLength: 5
          type: string
        password:
          maxLength: 50
          minLength: 8
          type: string
        repeatPassword:
          maxLength: 50
          minLength: 8
          type: string
        firstName:
          maxLength: 50
          minLength: 2
          type: string
        lastName:
          maxLength: 50
          minLength: 2
          type: string
      additionalProperties: false
    UserResponseDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
      additionalProperties: false
    EditUserReauestDTO:
      required:
        - newEmail
        - newFirstName
        - newLastName
        - newPassword
        - repeatPassword
      type: object
      properties:
        newEmail:
          maxLength: 50
          minLength: 5
          type: string
        newPassword:
          maxLength: 50
          minLength: 8
          type: string
        repeatPassword:
          maxLength: 50
          minLength: 8
          type: string
        newFirstName:
          maxLength: 50
          minLength: 2
          type: string
        newLastName:
          maxLength: 50
          minLength: 2
          type: string
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization: Bearer {token}"'
      name: Authorization
      in: header
security:
  - Bearer: []
